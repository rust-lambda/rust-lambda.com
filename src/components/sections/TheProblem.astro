---
import RocketIcon from "../icons/RocketIcon.astro";
import FlowerIcon from "../icons/FlowerIcon.astro";
import PiggyBankIcon from "../icons/PiggyBankIcon.astro";
---

<section id="the-problem">
  <div
    class="flex bg-card/50 text-card-foreground border border-border rounded-md p-8 text-lg"
  >
    <div class="max-w-[50em]">
      <h2
        class="text-2xl font-bold sm:text-3xl md:text-4xl lg:text-5xl/line-tight mb-4 bg-gradient-to-tr from-primary-alt to-primary inline-block text-transparent bg-clip-text"
      >
        Hey, dear serverless friend
      </h2>
      <div class="flex flex-col gap-4">
        <ul class="ml-8 list-outside list-disc leading-8">
          <li>
            Are you building web APIs with AWS Lambda and you wish there was a
            way to <strong class="font-semibold">reduce cold-starts</strong>?
          </li>
          <li>
            Your app is generating millions of Lambda invocations per day and
            the
            <strong class="font-semibold">cost</strong> is starting to add up?
          </li>
          <li>
            You know that Lambda is a <strong class="font-semibold"
              >sustainable</strong
            > platform, but are you wondering if you could do more?
          </li>
        </ul>
        <p class="mt-8 text-xl font-semibold">
          Well, you are in the right place!
        </p>
        <p>
          We have been building Lambda functions using the Rust programming
          language for a while now and we have seen impressive results in terms
          of efficiency, cost, and sustainability. In addition to that, Rust is
          a fantastic language with a great type system, which makes it easier
          to write elegant and correct code. Now, we are on a mission to share
          what we learnt so far!
        </p>
        <p>
          With this practical e-book you will learn everything there is to know
          to be able to write, test and ship Lambda Functions written in Rust.
        </p>
        <p class="font-semibold text-xl mt-8">
          Join us in this journey and let's make the cloud a better place, one
          Lambda at a time!
        </p>
      </div>
    </div>
    <div
      class="hidden md:flex p-4 opacity-50 self-end justify-end flex-1 alternate-content"
    >
      <div
        data-animationidx="0"
        class="block h-16 w-16 md:h-32 md:w-32 overflow-hidden [animation:4s_ease-in-out_0s_1_forwards_slideinout]"
      >
        <RocketIcon
          class="h-16 w-16 md:h-32 md:w-32 text-muted-foreground/50"
        />
      </div>
      <div
        data-animationidx="1"
        class="hidden h-16 w-16 md:h-32 md:w-32 overflow-hidden"
      >
        <FlowerIcon
          class="h-16 w-16 md:h-32 md:w-32 text-muted-foreground/50"
        />
      </div>
      <div
        data-animationidx="2"
        class="hidden h-16 w-16 md:h-32 md:w-32 overflow-hidden"
      >
        <PiggyBankIcon
          class="h-16 w-16 md:h-32 md:w-32 text-muted-foreground/50"
        />
      </div>
    </div>
  </div>
</section>
<style is:global>
  @keyframes slideinout {
    0% {
      opacity: 0;
      transform: translateX(-100%);
    }
    5% {
      opacity: 1;
      transform: translateX(0%);
    }
    95% {
      opacity: 1;
      transform: translateX(0%);
    }
    100% {
      opacity: 0;
      transform: translateX(100%);
    }
  }
</style>
<script>
  const animationClass = "[animation:4s_ease-in-out_0s_1_forwards_slideinout]";
  const items: NodeListOf<SVGAElement> = document.querySelectorAll(
    ".alternate-content > *",
  );
  function animateNext(e: AnimationEvent) {
    const currentIdx = Number.parseInt(
      (e.target as HTMLElement).dataset.animationidx as string,
    );
    const nextIdx = (currentIdx + 1) % items.length;
    const currentItem = items[currentIdx];
    const nextItem = items[nextIdx];
    currentItem.classList.remove("block", animationClass);
    currentItem.classList.add("hidden");
    nextItem.classList.remove("hidden");
    nextItem.classList.add("block", animationClass);
  }
  items.forEach((item) => {
    item.addEventListener("animationend", animateNext);
  });
</script>
